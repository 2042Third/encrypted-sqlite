# Clean build (recommended)
rm -rf build && mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
cmake --build . --target install


clang++ main.cpp \
-I./ \
-I./src \
-I./lib \
-I./lib/pdm-crypt-module \
-I./lib/pdm-crypt-module/src/lib \
-I./lib/cryptoSQLite \
-I./lib/cryptoSQLite/include/cryptosqlite \
-L./cmake-build-release \
-L./cmake-build-release/include \
-L./cmake-build-release/lib/cryptosqlite \
-L./cmake-build-release/lib/cryptosqlite/external/securememory \
-lsqlite3 \
-lcryptosqlite \
-lsecurememory \
-std=c++17 \
-o test_program

clang++ main.cpp \
-I./src \
-I./src/db \
-I./src/crypto \
-I./lib \
-I./lib/cryptoSQLite \
-I./lib/cryptoSQLite/external/securememory/include \
-I./lib/pdm-crypt-module/src/lib \
-I./lib/cryptoSQLite/include \
-I./cmake-build-release \
-L./cmake-build-release \
./cmake-build-release/libencrypted_sqlite.dylib \
./cmake-build-release/libencrypted_sqlite.0.1.dylib \
./cmake-build-release/libencrypted_sqlite.0.dylib \
./cmake-build-release/lib/cryptoSQLite/libcryptosqlite.dylib \
-std=c++20 \
-o test_program

# with rpath
clang++ main.cpp \
-I./src \
-I./src/db \
-I./src/crypto \
-I./lib \
-I./lib/cryptoSQLite \
-I./lib/cryptoSQLite/external/securememory/include \
-I./lib/pdm-crypt-module/src/lib \
-I./lib/cryptoSQLite/include \
-I./cmake-build-release \
-L./cmake-build-release \
-Wl,-rpath,./cmake-build-release \
-Wl,-rpath,./cmake-build-release/lib/cryptoSQLite \
./cmake-build-release/libencrypted_sqlite.dylib \
./cmake-build-release/libencrypted_sqlite.0.1.dylib \
./cmake-build-release/libencrypted_sqlite.0.dylib \
./cmake-build-release/lib/cryptoSQLite/libcryptosqlite.dylib \
-std=c++20 \
-o test_program



